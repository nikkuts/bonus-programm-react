{"version":3,"file":"static/js/819.1bab3b8d.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.filter;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"button\":\"ContactForm_button__eSwX9\"};","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectContacts } from \"redux/contacts/selectors\";\nimport { addContact } from \"redux/contacts/operations\";\nimport css from './ContactForm.module.css';\n\nexport default function ContactForm () {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const handleChange = e => {\n        \n        switch(e.target.name) {\n            case 'name':\n                setName(e.target.value);\n                break;\n            case 'number':\n                setNumber(e.target.value);\n                break;\n            default:\n                return;\n        }\n    };\n\n    const handleSubmit = e => {\n      \n      if(contacts.some(contact => contact.name === name)) {\n        alert(`${name} is already in contacts`);\n        return;\n      }       \n        e.preventDefault();\n        const newContact = {\n          name: name,\n          number: number,\n        };\n        dispatch(addContact(newContact)); \n        e.currentTarget.reset();\n    };\n\n      return (\n          <form className={css.form} onSubmit={handleSubmit}>\n            <label className={css.label}>\n              Name\n            <input\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n                onChange={handleChange}\n            />\n            </label>\n            <label className={css.label}>\n              Number\n            <input\n                type=\"tel\"\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n                onChange={handleChange}\n            />\n            </label>\n            <button type=\"submit\" className={css.button}>Add contact</button>\n          </form>\n        );     \n};","// extracted by mini-css-extract-plugin\nexport default {\"filterFields\":\"Filter_filterFields__sz1SP\"};","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {changeFilter} from \"redux/contacts/filterSlice\";\nimport css from './Filter.module.css';\n\nexport default function Filter () {\n  const dispatch = useDispatch();\n  const handlerChangeFilter = (e) => dispatch(changeFilter(e.target.value));\n\n  return (\n    <div className={css.filterFields}>\n          <label>\n            Find contacts by name\n          <input\n              type=\"text\"\n              name=\"filter\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              required\n              onChange={handlerChangeFilter}\n          />\n          </label>\n  </div>\n  )\n};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Contact_item__j+P5X\",\"itemBtn\":\"Contact_itemBtn__+cojo\"};","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { useDispatch } from \"react-redux\";\nimport {deleteContact} from 'redux/contacts/operations';\nimport css from './Contact.module.css';\n\nexport default function Contact ({id, name, number}) {\n  const dispatch = useDispatch();\n\n  const handleClick = () => dispatch(deleteContact(id)); \n\n    return (\n      <li key={id}>\n        <div className={css.item}>\n          <span>{name}: {number}</span>\n          <button type=\"button\" name={id} className={css.itemBtn} onClick={handleClick}>\n            Delete\n          </button>\n        </div>\n      </li>\n    )\n  };\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectContacts, selectFilter } from \"redux/contacts/selectors\";\nimport Contact from \"components/Contact/Contact\";\nimport css from './ContactList.module.css';\n\nexport default function ContactList () {\n  const contacts = useSelector(selectContacts); \n  const filter = useSelector(selectFilter); \n\n  const getVisibleContacts = () => {\n    \n    if (filter === '') {\n      return contacts;\n    }\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({name}) => \n    name.toLowerCase().includes(normalizedFilter));\n  };\n\n  return (\n  <ul className={css.list}>\n  {getVisibleContacts().map(({id, name, number}) => (\n    <Contact \n    id={id}\n    name={name}\n    number={number}\n    />\n  ))}\n  </ul>\n  );       \n};","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectIsLoading } from \"redux/contacts/selectors\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport ContactForm from \"components/ContactForm/ContactForm\";\nimport Filter from \"components/Filter/Filter\";\nimport ContactList from \"components/ContactList/ContactList\";\n\nexport default function Contacts () {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n        <h1>Phonebook</h1>\n        <ContactForm />   \n        <h2>Contacts</h2>\n        <Filter/>\n        <div>{isLoading && <b>Request in progress...</b>}</div>  \n        <ContactList/> \n    </>\n  );       \n};"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilter","filter","ContactForm","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","handleChange","e","target","value","_jsxs","className","css","onSubmit","some","contact","alert","concat","preventDefault","newContact","addContact","currentTarget","reset","children","_jsx","type","pattern","title","required","onChange","Filter","changeFilter","Contact","_ref","id","onClick","deleteContact","ContactList","normalizedFilter","toLowerCase","includes","getVisibleContacts","map","_ref2","Contacts","useEffect","fetchContacts","_Fragment"],"sourceRoot":""}